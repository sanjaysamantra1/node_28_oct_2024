Express Methods
===============
app.get()
app.post()
app.put()
app.patch()
app.delete()
app.listen()
app.use()
app.all()


app.use() vs app.get()
======================
-app.use() can handle all type of HTTP requests(GET,POST,PUT,DELETE)
-app.use() is generally used for introducing middlewares.
 app.use(express.json()); // express.json() is middleware
-app.get() is only for handling GET HTTP requests.
 app.get('/users', (req, res) => { 
    res.send('all users')
 })


app.use() vs app.all()
======================
app.use() will only see whether url starts with specified path.
app.all() will match the complete path.

app.use( "/book" , middleware);
// will match /book
// will match /book/author
// will match /book/subject
// won't match /book-123

app.all( "/book" , handler);
// will match /book
// won't match /book/author   
// won't match /book/subject  
// won't match /book-123  

app.all( "/book/*" , handler);
// won't match /book   
// won't match /book-123      
// will match /book/author
// will match /book/subject


Middlewares
===========
-Middlewares in ExpressJS are functions that can modify Request and Response objects.
-Either to retrieve something from request Object or to store something in response object.
-An example of a simple express js middleware could be to log the current date and time on every URL the user visits on our website.


without middleware : 
	request => Route => Response
with middleware : 
	request => middleware1 => middleware2 => Route => Response

https://www.turing.com/kb/building-middleware-for-node-js
https://expressjs.com/en/guide/using-middleware.html
https://expressjs.com/en/resources/middleware/body-parser.html

logger middleware
==================
const logger = (req, res, next) => {
  console.log('The time is: '+ Date.now())
  next();
}

An Express application can use the following types of middleware:
1. Application-level middleware
   app.use(logger)
2. Router-level middleware
   const userRouter = express.Router();
   userRouter.use(logger);
3. Error-handling middleware
   Note : To manually trigger error handling middleware, you can pass an error object to the next() function
   try{
   }catch(err){
	 next(err); // transfers error object to error handling middleware
   }   
4. Built-in middleware
    express.static()
	express.json()        converts request body to JSON.     
	express.urlencoded()  converts form-data to JSON
5. Third-party middleware 
   cors , body-parser, cookie-parser