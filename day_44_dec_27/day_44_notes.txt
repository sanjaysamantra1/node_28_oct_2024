JSON Web Token
==============
-JWT is used for authentication.
-JSON Web Tokens (JWT) are tokens generated by the server upon user authentication on a web application, and then sent to the client.
https://documentation.softwareag.com/webmethods/compendiums/v10-5/C_API_Management/index.html#page/api-mgmt-comp/co-jwt_usecase_workflow.html

Basic Flow
==========
1. User logs in with valid credentials.
2. Server generates a JWT and sends that to user/client.
3. client receives the token and stores it somewhere in the browser (session/local storage).
4. client sends the token in the Authorization header for protected pages/routes/data.
5. Server checks the token, gets user information and sends the response to the client.


1.client provides credentials to the authentication Server.
2.The access token and refresh token are then issued by the authentication Server.
3.client uses the access token to request protected data/resource.
4.The resource endpoint verifies the access token before returning the response.
5.Repeat steps 3 and 4 as long as the access token is valid.
6.When the access token expires, the client requests a new access-token using the refresh-token.
7.A new access token and refresh token are issued by the authentication Server.
8.Repeat steps 3 through 7 as long as refresh-token is valid.
9.When the refresh token expires, the client must re-authenticate with the authentication server, and the flow begins again at step 1.

https://blog.logicwind.com/jwt-refresh-token-implementation-in-node-js/
https://www.cloudzilla.ai/dev-education/how-to-build-authentication-api-with-jwt-token-in-nodejs/


1. npm init -y
2. npm install express cors mongoose jsonwebtoken bcryptjs